# reload this configuration file in tmux
# type this in terminal if tmux is already running
# tmux source ~/.tmux.conf

# Easy config reload
# You still have to close all session & re-open tmux if you delete a setting
# adding new setting won't be affected i guess
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# set tmux to have color if your terminal support it
set-option -sa terminal-overrides ",xterm*:Tc"

# change the prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# click to move between panes
# resize panes with mouse
set -g mouse on

# ===== START PANES =====

# Set easier window split keys (open new pane) in the current working directory
bind-key v split-window -v -c "#{pane_current_path}"
bind-key h split-window -h -c "#{pane_current_path}"

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
# or use Ctrl h j k l (christoomey/vim-tmux-navigator)

# Synchronize panes
bind-key y set-window-option synchronize-panes\; display-message "synchronize mode toggled."

# Start windows and panes at 1, not 0 (default)
# the 0 key is far & hard to reach
set -g base-index 1 # window index
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# ===== END PANES =====

# ===== START COPY MODE =====
# set vi-mode in copy mode
set-window-option -g mode-keys vi

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
# toggle rectangle select and line select mode
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# ====== WINDOWS ======
# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Alt + h/l to switch windows (Option - Shift h l) on my mac somehow!
# bind -n M-H previous-window
# bind -n M-L next-window

# Easily reorder windows with CTRL+SHIFT+Arrow
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# ===== OTHERS =====
# https://github.com/edr3x/tmux-sessionizer
bind-key -r f run-shell "tmux neww ~/bin/tmux-sessionizer"

# jump directly to your desired project without opening fzf
bind-key -r 1 run-shell "~/bin/tmux-sessionizer ~/.dotfiles/nvim/.config"

# ===== List of plugins===== 
# Put this at the bottom of ~/.tmux.conf

# Hit prefix + I to fetch the plugin and source it.
# prefix + U to update
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'

# ===== sessionX =====
# set -g @plugin 'omerxx/tmux-sessionx'
# I recommend using `o` if not already in use, for least key strokes when launching
# set -g @sessionx-bind '<mykey>'

# colorscheme
set -g @plugin 'egel/tmux-gruvbox'
# set desired theme options...
set -g @tmux-gruvbox 'dark' # or 'dark256', 'light', 'light256'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Yazi terminal File Manager
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM